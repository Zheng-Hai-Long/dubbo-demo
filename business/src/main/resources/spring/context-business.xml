<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-autowire="byName">

	<aop:aspectj-autoproxy/>

	<context:component-scan base-package="com.guangde.business.service"/>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.guangde.business.dao" />
		<property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory" />
	</bean>
	
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.username}" />
        <property name="password" value="${mysql.password}" />
        <property name="driverClassName" value="${mysql.driverClassName}" />
        <property name="filters" value="stat" />
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
    </bean>

    <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:spring/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath*:com/guangde/business/mapper/*.xml" />
    </bean> 
    
    <bean id="defaultTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="defaultTransactionManager" proxy-target-class="true"/>
	
    <aop:config>
		<aop:pointcut id="allServiceMethods" expression="execution(* com.guangde.business.service.*.*(..))" />
		<aop:advisor advice-ref="defaultTransactionAdvice" pointcut-ref="allServiceMethods" />
	</aop:config>
	
	<tx:advice id="defaultTransactionAdvice" transaction-manager="defaultTransactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" isolation="DEFAULT"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" isolation="READ_COMMITTED"/>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" isolation="READ_COMMITTED"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<bean id="springContextUtil"  class="com.guangde.business.util.SpringContextUtil"/>
</beans>