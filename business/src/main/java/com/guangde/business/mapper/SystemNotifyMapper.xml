<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guangde.business.dao.SystemNotifyMapper">

	<select id="queryByUserId" resultType="SystemNotify" parameterType="Integer">
 		select * from system_notify where userId = #{userId} 
	</select>
	
	<select id="countNoReadByUserIdAndState" resultType="Integer"  parameterType="Integer">
		select count(*) from system_notify where userId = #{userId} and state = #{state}
	</select>
	
	<insert id="save"  parameterType="SystemNotify"  useGeneratedKeys="true" keyProperty="id">
		insert into system_notify
		(
			userId,
			sender,
			subject,
			content,
			state,
			isShow,
			createTime
		)
		values
		(
			#{userId},
			#{sender},
			#{subject},
			#{content},
			#{state},
			#{isShow},
			#{createTime}
		)
	</insert>
	
	<delete id="delete"  parameterType="Integer">
		delete from  system_notify where id=#{id} and userId = #{userId}
	</delete>
	
	<select id="queryByQueryTime"  resultType="SystemNotify" parameterType="Map">
		select * from system_notify where userId = #{userId}
		
		<if test="_parameter.containsKey('startTime')">
			and createTime &gt;= #{startTime}
		</if>
		
		<if test="_parameter.containsKey('endTime')">
			and createTime &lt;= #{endTime}
		</if>
		
		<if test="_parameter.containsKey('state')">
			and state = #{state}
		</if>
		
	</select>
	
	<update id="setToRead" parameterType="Integer">
		update system_notify set state=1 where id=#{id} and userId = #{userId}
	</update>
	
	<select id="queryByCondition"  parameterType="SystemNotify" resultType="SystemNotify">
		select * from system_notify
		
		<where>
 			<if test="id != null and id != 0">
				and id = #{id}
			</if>
			
 			<if test="userId != null and userId != 0">
				and userId = #{userId}
			</if>
			
			<if test="state != null">
				and state = #{state}
			</if>
			
			<if test="queryStartDate != null">
				 AND createTime &gt;= #{queryStartDate} 
			</if>
			<if test="queryEndDate != null">
				 AND createTime &lt;= #{queryEndDate} 
			</if>
			
			<if test="sender != null">
				and sender = #{sender}
			</if>
			
 		</where>
			order by createTime DESC
	</select>
	
	<select id="countNoReadBySystemNotify" resultType="Integer"  parameterType="SystemNotify">
		select count(*) from system_notify 
		<where>
 			<if test="id != null and id != 0">
				and id = #{id}
			</if>
			
 			<if test="userId != null and userId != 0">
				and userId = #{userId}
			</if>
			
			<if test="sender != null">
				and sender = #{sender}
			</if>
			
			<if test="isShow != null">
				and isShow = #{isShow}
			</if>
			
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="queryStartDate != null">
				 AND createTime &gt;= #{queryStartDate} 
			</if>
			<if test="queryEndDate != null">
				 AND createTime &lt;= #{queryEndDate} 
			</if>
 		</where>
	</select>
	
	<select id="queryNextRecord"  parameterType="Integer" resultType="SystemNotify">
		<![CDATA[
		select * from system_notify
		where id = (
			select min(id) from system_notify where id > #{id} and userId = #{userId}
		)
		]]>
	</select>
	
	<select id="queryPreviousRecord"  parameterType="Integer" resultType="SystemNotify">
		<![CDATA[
		select * from system_notify
		where id = (
			select max(id) from system_notify where id < #{id} and userId = #{userId}
		)
		]]>
	</select>
	
	<select id="queryByIdAndUserId"  parameterType="Integer" resultType="SystemNotify">
		select * from system_notify where id = #{id} and userId = #{userId}
	</select>
	
	<select id="queryByIds" resultType="SystemTypeModel" parameterType="SystemTypeModel">
		SELECT * FROM system_type_model 
		<where>
			<if test="ids != null">
				and id IN 
				<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
				 #{item} 
				 </foreach>
			 </if>
		</where>
		
	</select>
</mapper>